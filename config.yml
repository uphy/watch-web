initial_run: '{{ env "INITIAL_RUN" | default "false" }}'
jobs:
  - id: ur-{{ .item.shisya }}-{{ .item.danchi }}
    schedule: "@every 10m"
    source:
      include:
        file: ur.yml
        vars:
          shisya: '{{ .item.shisya }}'
          danchi: '{{ .item.danchi }}'
    # 監視項目の固定の表示文字列
    label: "{{ .item.name }}"
    # 監視項目のURL
    link: https://www.ur-net.go.jp/chintai/kanto/tokyo/{{ .item.shisya }}_{{ .item.danchi }}0.html
    # 変更があったときに実施するアクション
    # ここで指定した要素数だけ、jobが複製される。
    # job内で、各配列要素は `.item として参照できる。
    with_items:
      - { shisya: 50, danchi: 191, name: "所沢パークタウン駅前通り" }
      - { shisya: 50, danchi: 197, name: "所沢パークタウン公園通り" }
      - { shisya: 50, danchi: 198, name: "所沢パークタウン並木通り" }
      - { shisya: 50, danchi: 213, name: "所沢パークタウン駅前プラザ" }
      - { shisya: 50, danchi: 303, name: "プラザシティ新所沢　けやき通り" }
      - { shisya: 50, danchi: 349, name: "プラザシティ新所沢　緑町第二" }
      - { shisya: 50, danchi: 385, name: "プラザシティ新所沢けやき通り第二" }
      - { shisya: 50, danchi: 395, name: "プラザシティ新所沢　緑町第三" }
      - { shisya: 50, danchi: 400, name: "プラザシティ新所沢けやき通り第三" }
      - { shisya: 50, danchi: 408, name: "プラザシティ新所沢駅前" }
    enable: true

actions:
  - slack_bot:
      token: '{{ env "SLACK_TOKEN" }}'
      channel: "web_update"
      thread_per: job
# 各ジョブの現在の値を保存するストレージ
store:
  directory:
    path: data

# 型についての方針
# - プログラム側で暗黙的に型変換はやらないようにしたい。
#   例えばshellのoutputはstringの方がわかりやすい。
# - 変換するときはconfigの中でユーザーに明示的に変換させたい
# - ユーザーが変換するときは基本的にエラーは出さず緩く変換したい。
