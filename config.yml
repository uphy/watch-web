initial_run: '{{ env "INITIAL_RUN" | default "false" }}'
jobs:
  - id: ur-{{ .item.shisya }}-{{ .item.danchi }}
    schedule: "@every 10m"
    source:
      include:
        file: ur.yml
        vars:
          shisya: '{{ .item.shisya }}'
          danchi: '{{ .item.danchi }}'
    # 監視項目の固定の表示文字列
    label: "{{ .item.name }}"
    # 監視項目のURL
    link: https://www.ur-net.go.jp/chintai/kanto/tokyo/{{ .item.shisya }}_{{ .item.danchi }}0.html
    # 変更があったときに実施するアクション
    # ここで指定した要素数だけ、jobが複製される。
    # job内で、各配列要素は `.item として参照できる。
    with_items:
      - { shisya: 20, danchi: 688, name: "グリーンヒルズ東久留米" }
      - { shisya: 20, danchi: 399, name: "清瀬駅前ハイツ" }
      - { shisya: 20, danchi: 465, name: "グリーンプラザ高松＜光が丘＞" }
      - { shisya: 20, danchi: 391, name: "光が丘パークタウン いちょう通り八番街" }
      - { shisya: 20, danchi: 455, name: "光が丘パークタウン 大通り中央" }
      - { shisya: 20, danchi: 410, name: "光が丘パークタウン 四季の香弐番街" }
      - { shisya: 20, danchi: 369, name: "光が丘パークタウン 大通り南" }
      - { shisya: 20, danchi: 350, name: "光が丘パークタウン 公園南" }
      - { shisya: 20, danchi: 435, name: "光が丘パークタウン プロムナード十番街" }
  - id: amazon-{{ .item.id }}
    schedule: "@every 10m"
    label: '{{ .item.name }}'
    link: https://www.amazon.co.jp/dp/{{ .item.id }}/
    source:
      include:
        file: amazon.yml
        vars:
          itemId: '{{ .item.id }}'
    with_items:
      - { id: 'B07H56HB8T', name: 'TOPVISION プロジェクター' }
  - id: amazon-timesale-{{ .itemIndex }}
    schedule: "@every 10m"
    label: '{{ .item.keyword }}'
    link: https://a-timesale.com/deals/?search={{ .item.keyword | urlquery}}
    source:
      include:
        file: amazon-timesale.yml
        vars:
          keyword: '{{ .item.keyword }}'
      transforms:
        - filter:
            javascript: source._price >= 4000 && source._price <= 20000
    with_items:
      - { keyword: 'プロジェクタ' }
actions:
  - slack:
      url: '{{ env "SLACK_WEBHOOK_URL" }}'
# 各ジョブの現在の値を保存するストレージ
store:
  redis:
    # アドレスが空の場合には無効として、デフォルト(オンメモリ)に切り替える。
    redistogo: '{{ env "REDISTOGO_URL" }}'

# 型についての方針
# - プログラム側で暗黙的に型変換はやらないようにしたい。
#   例えばshellのoutputはstringの方がわかりやすい。
# - 変換するときはconfigの中でユーザーに明示的に変換させたい
# - ユーザーが変換するときは基本的にエラーは出さず緩く変換したい。
